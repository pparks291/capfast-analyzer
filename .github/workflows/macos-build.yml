name: macOS Build

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

jobs:
  build:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [x64, arm64]

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Build macOS (${{ matrix.arch }})
      run: npx electron-builder --mac --${{ matrix.arch }} --publish never

    - name: Upload to GitLab Release
      env:
        GITLAB_API_TOKEN: ${{ secrets.GITLAB_API_TOKEN }}
        CI_PROJECT_ID: "68182511"
      run: |
        VERSION=$(node -e "console.log(require('./package.json').version)")
        
        # Check if release exists
        RELEASE_EXISTS=$(curl --silent --header "PRIVATE-TOKEN: ${GITLAB_API_TOKEN}" \
          "https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/releases/v${VERSION}" | \
          jq -r '.message')
        
        # Create release if it doesn't exist
        if [[ "$RELEASE_EXISTS" == "404 Release Not Found" ]]; then
          curl --header "PRIVATE-TOKEN: ${GITLAB_API_TOKEN}" \
            --data "name=v${VERSION}" \
            --data "tag_name=v${VERSION}" \
            --data "description=Release v${VERSION}" \
            --data "ref=${{ github.sha }}" \
            --request POST "https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/releases"
        fi
        
        # Upload DMG file
        find dist -name "*.dmg" | while read file; do
          filename=$(basename "$file")
          echo "Uploading $filename to release v${VERSION}..."
          
          # Upload file
          UPLOAD_RESPONSE=$(curl --silent --header "PRIVATE-TOKEN: ${GITLAB_API_TOKEN}" \
            --upload-file "$file" \
            --request POST "https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/uploads")
          
          # Get URL from response
          UPLOAD_URL=$(echo $UPLOAD_RESPONSE | jq -r ".url")
          
          # Add file to release
          curl --request POST \
            --header "PRIVATE-TOKEN: ${GITLAB_API_TOKEN}" \
            --data "name=${filename}" \
            --data "url=${UPLOAD_URL}" \
            "https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/releases/v${VERSION}/assets/links"
        done 